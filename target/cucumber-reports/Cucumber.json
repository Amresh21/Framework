[
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 360106,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario()"
            }
          }
        ],
        "line": 6,
        "name": "Delete existing record and verify the status code",
        "description": "",
        "id": "api-automation-deleterequest;delete-existing-record-and-verify-the-status-code",
        "after": [
          {
            "result": {
              "duration": 39253,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 366549270,
              "status": "passed"
            },
            "line": 7,
            "name": "set base URI",
            "match": {
              "location": "TC_API_deleteRequest.set_base_URI()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 613316162,
              "status": "passed"
            },
            "line": 8,
            "name": "I perform delete request",
            "match": {
              "location": "TC_API_deleteRequest.i_perform_delete_request()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2346667,
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c404\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat StepDefinition.TC_API_deleteRequest.i_validate_the_status_code_is_equals(TC_API_deleteRequest.java:34)\r\n\tat âœ½.Then I validate the status code is equals 200(deleteRequest.feature:9)\r\n",
              "status": "failed"
            },
            "line": 9,
            "name": "I validate the status code is equals 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 37
                }
              ],
              "location": "TC_API_deleteRequest.i_validate_the_status_code_is_equals(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@APITest"
          }
        ]
      }
    ],
    "name": "Api Automation deleteRequest",
    "description": "I want to use this template for deleting the existing record in the json body",
    "id": "api-automation-deleterequest",
    "keyword": "Feature",
    "uri": "deleteRequest.feature"
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 26624,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario()"
            }
          }
        ],
        "line": 6,
        "name": "To Perform Get Request using Rest Assured Framework",
        "description": "",
        "id": "api-automation-getrequest;to-perform-get-request-using-rest-assured-framework",
        "after": [
          {
            "result": {
              "duration": 20139,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 217429,
              "status": "passed"
            },
            "line": 7,
            "name": "a base URI",
            "match": {
              "location": "TC_API_getRequest.a_base_URI()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 584384071,
              "status": "passed"
            },
            "line": 8,
            "name": "i enter the city",
            "match": {
              "location": "TC_API_getRequest.i_enter_the_city()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8879102,
              "status": "passed"
            },
            "line": 9,
            "name": "I get the body response",
            "match": {
              "location": "TC_API_getRequest.i_get_the_body_response()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 93525,
              "status": "passed"
            },
            "line": 10,
            "name": "the status code is equals 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TC_API_getRequest.the_status_code_is_equals(int)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@APITest"
          }
        ]
      }
    ],
    "name": "Api Automation getRequest",
    "description": "I want to use this feature to retrieve the data response",
    "id": "api-automation-getrequest",
    "keyword": "Feature",
    "uri": "getRequest.feature"
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 44714,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario()"
            }
          }
        ],
        "line": 6,
        "name": "Add a new Response in the Response Body",
        "description": "",
        "id": "api-automation-postrequest;add-a-new-response-in-the-response-body",
        "after": [
          {
            "result": {
              "duration": 21504,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 164181,
              "status": "passed"
            },
            "line": 7,
            "name": "a Base URI",
            "match": {
              "location": "TC_API_postRequest.a_Base_URI()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1581386482,
              "status": "passed"
            },
            "line": 8,
            "name": "I add the new entry in the json body using json object",
            "match": {
              "location": "TC_API_postRequest.i_add_the_new_entry_in_the_json_body_using_json_object()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 64853,
              "status": "passed"
            },
            "line": 9,
            "name": "I validate the status code equals 201",
            "match": {
              "arguments": [
                {
                  "val": "201",
                  "offset": 34
                }
              ],
              "location": "TC_API_postRequest.i_validate_the_status_code_equals(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@APITest"
          }
        ]
      }
    ],
    "name": "Api Automation postRequest",
    "description": "I want to use this feature to add the new entry in Json file",
    "id": "api-automation-postrequest",
    "keyword": "Feature",
    "uri": "postRequest.feature"
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 23211,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario()"
            }
          }
        ],
        "line": 6,
        "name": "update the json body and verify the status code",
        "description": "",
        "id": "api-automation-putrequest;update-the-json-body-and-verify-the-status-code",
        "after": [
          {
            "result": {
              "duration": 30720,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 302080,
              "status": "passed"
            },
            "line": 7,
            "name": "a base URI using put request",
            "match": {
              "location": "TC_API_putRequest.a_base_URI_using_put_request()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11825150,
              "status": "passed"
            },
            "line": 8,
            "name": "I update the existing value in json file using json object",
            "match": {
              "location": "TC_API_putRequest.i_update_the_existing_value_in_json_file_using_json_object()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 78165,
              "status": "passed"
            },
            "line": 9,
            "name": "I validate the status code is equals to 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 40
                }
              ],
              "location": "TC_API_putRequest.i_validate_the_status_code_is_equals_to(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@APITest"
          }
        ]
      }
    ],
    "name": "Api Automation putRequest",
    "description": "I want to use this feature to update the existing entry in Json file",
    "id": "api-automation-putrequest",
    "keyword": "Feature",
    "uri": "putRequest.feature"
  }
]